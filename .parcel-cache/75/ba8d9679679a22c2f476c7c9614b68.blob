"use strict";
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _classnames = _interopRequireDefault(require("classnames"));
var _all = _interopRequireDefault(require("prop-types-extra/lib/all"));
var _react = _interopRequireWildcard(require("react"));
var _uncontrollable = require("uncontrollable");
var _ThemeProvider = require("./ThemeProvider");
var _NavbarContext = _interopRequireDefault(require("./NavbarContext"));
var _CardContext = _interopRequireDefault(require("./CardContext"));
var _AbstractNav = _interopRequireDefault(require("./AbstractNav"));
var _NavItem = _interopRequireDefault(require("./NavItem"));
var _NavLink = _interopRequireDefault(require("./NavLink"));
var defaultProps = {
    justify: false,
    fill: false
};
var Nav = _react.default.forwardRef(function(uncontrolledProps, ref) {
    var _classNames;
    var _useUncontrolled = _uncontrollable.useUncontrolled(uncontrolledProps, {
        activeKey: 'onSelect'
    }), _useUncontrolled$as = _useUncontrolled.as, as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as, initialBsPrefix = _useUncontrolled.bsPrefix, variant = _useUncontrolled.variant, fill = _useUncontrolled.fill, justify = _useUncontrolled.justify, navbar = _useUncontrolled.navbar, className = _useUncontrolled.className, children = _useUncontrolled.children, activeKey = _useUncontrolled.activeKey, props = _objectWithoutPropertiesLoose2.default(_useUncontrolled, [
        "as",
        "bsPrefix",
        "variant",
        "fill",
        "justify",
        "navbar",
        "className",
        "children",
        "activeKey"
    ]);
    var bsPrefix = _ThemeProvider.useBootstrapPrefix(initialBsPrefix, 'nav');
    var navbarBsPrefix;
    var cardHeaderBsPrefix;
    var isNavbar = false;
    var navbarContext = _react.useContext(_NavbarContext.default);
    var cardContext = _react.useContext(_CardContext.default);
    if (navbarContext) {
        navbarBsPrefix = navbarContext.bsPrefix;
        isNavbar = navbar == null ? true : navbar;
    } else if (cardContext) cardHeaderBsPrefix = cardContext.cardHeaderBsPrefix;
    return(/*#__PURE__*/ _react.default.createElement(_AbstractNav.default, _extends2.default({
        as: as,
        ref: ref,
        activeKey: activeKey,
        className: _classnames.default(className, (_classNames = {
        }, _classNames[bsPrefix] = !isNavbar, _classNames[navbarBsPrefix + "-nav"] = isNavbar, _classNames[cardHeaderBsPrefix + "-" + variant] = !!cardHeaderBsPrefix, _classNames[bsPrefix + "-" + variant] = !!variant, _classNames[bsPrefix + "-fill"] = fill, _classNames[bsPrefix + "-justified"] = justify, _classNames))
    }, props), children));
});
Nav.displayName = 'Nav';
Nav.defaultProps = defaultProps;
Nav.Item = _NavItem.default;
Nav.Link = _NavLink.default;
var _default = Nav;
exports.default = _default;
module.exports = exports["default"];
